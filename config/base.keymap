/* 42 KEY MATRIX / LAYOUT MAPPING

  ╭─────────────────────────┬─────────────────────────╮
  │  1   2   3   4   5   6  │   7   8   9  10  11  12 │
  │ 13  14  15  16  17  18  │  19  20  21  22  23  24 │
  │ 25  26  27  28  29  30  │  31  32  33  34  35  36 │
  ╰───────────╮ 37  38  39  │  40  41  42 ╭───────────╯
              ╰─────────────┴─────────────╯

  ╭─────────────────────────┬─────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────┴─────────────╯

  ╭─────────────────────────┬─────────────────────────╮
  │ ESC  Q   W   E   R   T  │  Y   U   I   O   P   -  │
  │ TAB  A   S   D   F   G  │  H   J   K   L   ;   '  │
  │ SFT  Z   X   C   V   B  │  N   M   ,   .   /   \  │
  ╰───────────╮ 37  38  39  │  40  41  42 ╭───────────╯
              ╰─────────────┴─────────────╯

*/


#define DEF 0
#define NAV 1
#define FN 2
#define SYM 3
#define SYS 4
#define MOUSE 5

#include "mouse.dtsi"
#include "extra_keys.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include "zmk-helpers/helper.h"
#include "custom.dtsi"
#include "combos.dtsi"

/*
// smart-mouse, requires PR #1366
ZMK_TRI_STATE(smart_mouse,
    bindings = <&tog MOUSE>, <&none>, <&tog MOUSE>;
    ignored-key-positions = <MOUSE_KEYS>;
    ignored-layers = <MOUSE>;
)
*/

/* Keymap ----------------------------------------------------------------------------------------------------------- */

ZMK_CONDITIONAL_LAYER(settings, SYM NAV, SYS)

ZMK_LAYER(default,
  X_TOP
  &kp ESC    &kp Q    &kp W  &kp E  &kp R       &kp T                                      &kp Y       &kp U    &kp I      &kp O    &kp P     &kp MINUS
  &kp TAB    HRML(A,  S,     D,     F)          &kp G                                      &kp H       HRMR(J,  K,         L,       SEMI)     &kp APOS
  &kp LSHFT  &kp Z    &kp X  &kp C  &kp V       &kp B          X_LE         X_RE           &kp N       &kp M    &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT BSLH
                      X_LT1  X_LT2  &none       &mt LSHFT TAB  &lt SYM RET  &lt NAV SPACE  &mouse_tog  &mo FN   X_RT2      X_RT1
)

ZMK_LAYER(nav,
  X_TOP
  &trans  &trans  &trans     &win_up    &trans      &trans                    &kp PG_UP   &kp BSPC   &up         &kp DEL      FORMAT   &kp INS
  &trans  &trans  &win_left  &win_down  &win_right  &trans                    &kp PG_DN   &left      &down       &right       CLOSE    &kp HOME
  &trans  &trans  &trans     &trans     &trans      &trans  X_LE      X_RE    NEXT_APP    PREV_WIN   &trans      NEXT_WIN     &trans   &kp END
                  X_LT1      X_LT2      &trans      &trans  &trans    &trans  &trans      &trans     X_RT2       X_RT1
)

ZMK_LAYER(function,
  X_TOP
  &none  &none     &none   &none     &none     &none                    &none      &none     &none      &none     &none     &none
  &none  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5                   &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
  &none  &none     CUT     COPY      PASTE     &none    X_LE     X_RE   &none      &none     &none      &none     &none     &kp F12
                   X_LT1   X_LT2     &none     &none    &none    &none  &none      &none     X_RT2      X_RT1
)

ZMK_LAYER(symbol,
  X_TOP
  &kp TILDE   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                 &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp PLUS
  &kp GRAVE   &kp N1    &kp N2  &kp N3    &kp N4    &kp N5                    &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp EQUAL
  &none       &none     CUT     COPY      PASTE     &none      X_LE    X_RE   &kp LBRC   &kp RBRC  &kp LBKT   &kp RBKT  &none     &none
                        X_LT1   X_LT2     &none     &none      &none   &none  &none      &none     X_RT2      X_RT1
)

ZMK_LAYER(system,
  X_TOP
  &bt BT_CLR    &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                    &trans    &kp C_MUTE  &kp C_VOL_UP  &kp C_PP    &trans  &trans
  &out OUT_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                 &trans    &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &trans  &trans
  &out OUT_BLE  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp PSCRN        &kp K_CMENU      &rgb_ug RGB_TOG  X_LE    X_RE   &trans    &trans      &trans        &trans      &trans  &trans
                                 X_LT1            X_LT2            &none            &none            &none   &none  &none     &none       X_RT2         X_RT1
)

ZMK_LAYER(mouse,
  X_TOP
  &trans  &trans  &trans  &trans  &trans      &trans                  U_WH_U      U_CL_L   U_MS_U   U_CL_R   U_CL_F  &bspc
  &trans  &trans  &trans  &trans  &trans      &trans                  U_WH_D      U_MS_L   U_MS_D   U_MS_R   U_CL_B  &del
  &trans  &trans  &trans  &trans  &trans      &trans  X_LE    X_RE    &trans      U_WH_L   &trans   U_WH_R   &trans  &trans
                  X_LT1   X_LT2   &none       &none   &none   &none   &mouse_tog  &none    X_RT2    X_RT1
)
